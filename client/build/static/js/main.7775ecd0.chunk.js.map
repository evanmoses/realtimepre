{"version":3,"sources":["components/ActionRandomizer.jsx","components/Rangechart.jsx","components/Buttons.jsx","components/SingleBar.jsx","components/FreqSelect.jsx","components/FreqBars.jsx","components/FreqDisplay.jsx","components/Dash.jsx","lib/AlertModal.js","lib/combos.jsx","App.js","reportWebVitals.js","index.js"],"names":["handleTextColor","color","FreqRandom","styled","div","RandomNum","props","action","FreqAction","ActionRandomizer","onClick","handleComboClick","randomNum","RangeBox","RangeContainer","ComboSquare","FreqFill","Freq","height","ComboText","Rangechart","useState","randomizerDelay","setRandomizerDelay","useStateWithCallbackLazy","showRandomizer","setShowRandomizer","Math","ceil","random","setRandomNum","setAction","decideAction","setTimeout","clearTimeout","dragSelect","e","setMouseDown","handleFreqInput","currentCombo","thisBetRange","range","betRange","a","foldFreq","b","callFreq","c","raise","undefined","freqArray","map","x","freq","actionIndex","elem","index","slice","reduce","findIndex","n","size","fillSquares","i","y","combo","onMouseEnter","currentComboIndex","setCombo","isMouseDown","handleMouseEnter","onMouseDown","displayActive","hand","ButtonContainer","ButtonHeading","ButtonGroup","ButtonLabel","label","CheckButton","input","Buttons","positionArray","position","type","name","value","checked","heroPosition","onChange","handleHeroChange","villainPosition","handleVillainChange","facingAction","handleActionChange","style","width","Container","SingleBar","SelectContainer","SelectButtonContainer","FreqButtonRow","InputContainer","ControlButton","FreqButton","FreqInput","RaiseText","FreqSelect","handleFoldClick","className","foldPicker","freqPicker","event","handleFreqChange","marginLeft","handleCallClick","callPicker","marginTop","handleRaiseClick","raisePicker","sizePicker","handleSizeChange","handleLoadClick","handleResetClick","handleSubmitClick","ActionCol","RaiseBars","Bar","FreqText","ActionText","FreqBars","raiseColorPicker","FreqContainer","FreqDisplay","DashBox","Dash","AlertModal","Swal","mixin","padding","confirmButtonText","cards","cardValue","copy","Array","from","reverse","indexOf","combos","z","flat","split","length","charAt","defaultRange","heroPos","vilPos","facing","stackDepth","keys","o","Object","assign","MySwal","withReactContent","MainContainer","AppRow","DispButton","App","setDisplay","handleDisplayClick","target","setHeroPosition","setVillainPosition","setFacingAction","selectedRange","setSelectedRange","updateRange","setRange","getRange","useCallback","source","axios","CancelToken","get","params","cancelToken","token","response","data","rangeResponse","console","log","cancel","checkForRange","fire","title","showCancelButton","reverseButtons","then","result","isConfirmed","postRange","isDismissed","icon","post","status","didPost","text","pushSelectedToRange","newRange","useEffect","setFoldPicker","setCallPicker","setRaisePicker","setFreqPicker","setSizePicker","setRenderTrigger","onMouseUp","freqPickerToNum","parseInt","sizePickerToNum","parseFloat","raiseArray","thisCombo","cloneDeep","forEach","element","compareObjects","keysA","keysB","key","includes","toString","prevState","prevCheck","newFreq","newArr","newSize","preConfirm","process","showValidationMessage","resetRange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7775ecd0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\n\r\n\r\nfunction ActionRandomizer(props) {\r\n\r\n  return (\r\n    <FreqRandom onClick={props.handleComboClick}>\r\n      <RandomNum{...props}>{props.randomNum}</RandomNum>\r\n      <FreqAction{...props}>{props.action}</FreqAction>\r\n    </FreqRandom>\r\n  );\r\n}\r\n\r\nconst handleTextColor = (color) => {\r\n  if (color === 'FOLD') {\r\n    return '#85c2c9';\r\n  }\r\n  if (color === 'CALL') {\r\n    return \"#aecf84\";\r\n  }\r\n  if (color === 'N/A') {\r\n    return '#dfdfdf'\r\n  }\r\n  return \"#a484d1\";\r\n}\r\n\r\nconst FreqRandom = styled.div`\r\n  background-color: rgba(64, 64, 64, 0.8);\r\n  padding: 25px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n;`\r\n\r\nconst RandomNum = styled.div`\r\n  font-size: 50px;\r\n  font-weight: 500;\r\n  line-height: 50px;\r\n  color: ${props => handleTextColor(props.action)};\r\n;`\r\n\r\nconst FreqAction = styled.div`\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n  line-height: 25px;\r\n  color: ${props => handleTextColor(props.action)};\r\n;`\r\n\r\nexport default ActionRandomizer;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {useStateWithCallbackLazy} from 'use-state-with-callback';\r\nimport ActionRandomizer from './ActionRandomizer.jsx';\r\n\r\nfunction Rangechart(props) {\r\n  const [randomizerDelay, setRandomizerDelay] =  useState(null);\r\n  const [showRandomizer, setShowRandomizer] = useStateWithCallbackLazy(false);\r\n  const [randomNum, setRandomNum] = useState(Math.ceil(Math.random() * 100))\r\n  const [action, setAction] = useState('');\r\n\r\n\r\n  const handleComboClick = () => {\r\n    if (!showRandomizer) {\r\n      setAction(decideAction());\r\n      setShowRandomizer(true, () => {\r\n        setRandomizerDelay(setTimeout(() => {\r\n          setShowRandomizer(false);\r\n          setRandomNum(Math.ceil(Math.random() * 100));\r\n        }, 5000))\r\n      });\r\n    }\r\n    if (showRandomizer) {\r\n      setShowRandomizer(false);\r\n      setRandomNum(Math.ceil(Math.random() * 100));\r\n      clearTimeout(randomizerDelay);\r\n    }\r\n  }\r\n\r\n  const dragSelect = (e) => {\r\n    props.setMouseDown(true);\r\n    props.handleFreqInput(props.currentCombo);\r\n  }\r\n\r\n  const decideAction = () => {\r\n    const thisBetRange = props.range.betRange[props.currentCombo];\r\n    var a = thisBetRange.foldFreq;\r\n    var b = thisBetRange.callFreq;\r\n    var c = thisBetRange.raise;\r\n\r\n\r\n    if (!a && !b && !c[0]) {\r\n      return 'N/A';\r\n    }\r\n    if (a === undefined) { a=0 };\r\n    if (b === undefined) { b=0 };\r\n    if (a > randomNum) {\r\n      return 'FOLD';\r\n    }\r\n    if (a+b > randomNum) {\r\n      return 'CALL';\r\n    }\r\n    else {\r\n      const freqArray = c.map(x => a+b+x.freq)\r\n      const totalFreqArray = freqArray.map((elem, index) => {\r\n        return freqArray.slice(0,index + 1).reduce((a,b) => a+b);\r\n      });\r\n      const actionIndex = totalFreqArray.findIndex((n) => n > randomNum);\r\n      if (c[actionIndex] === undefined) {\r\n        return 'N/A';\r\n      }\r\n      return <div>RAISE<br/>{c[actionIndex].size} BB</div>\r\n    }\r\n  }\r\n\r\n  const handleMouseEnter = (e, index) => {\r\n    const currentComboIndex = index;\r\n    props.setCombo(currentComboIndex, (combo) => {\r\n      props.isMouseDown && props.handleFreqInput(combo);\r\n    });\r\n  };\r\n\r\n  const fillSquares = (i) => {\r\n    const x = props.range.betRange[i];\r\n    let y = [];\r\n    x.raise ? y = x.raise : y = null;\r\n    return (\r\n      <FreqFill>\r\n        {y[3] ? <Freq color=\"#d1b684\" height={`${y[3].freq/100*29}px`} /> : null}\r\n        {y[2] ? <Freq color=\"#d19184\" height={`${y[2].freq/100*29}px`} /> : null}\r\n        {y[1] ? <Freq color=\"#d184ce\" height={`${y[1].freq/100*29}px`} /> : null}\r\n        {y[0] ? <Freq color=\"#a484d1\" height={`${y[0].freq/100*29}px`} /> : null}\r\n        {x.callFreq ? <Freq color=\"#aecf84\" height={`${x.callFreq/100*29}px`} /> : null}\r\n        {x.foldFreq ? <Freq color=\"#85c2c9\" height={`${x.foldFreq/100*29}px`} /> : null}\r\n      </FreqFill>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <RangeBox>\r\n      <RangeContainer>\r\n        {props.range.betRange.map((combo, index) => {\r\n          return (\r\n            <ComboSquare\r\n              key={props.range.betRange[index].hand}\r\n              onMouseEnter={(e) => handleMouseEnter(e, index)}\r\n              onMouseDown={props.displayActive ? handleComboClick : dragSelect}\r\n            >\r\n              <ComboText><div><p>{props.range.betRange[index].hand}</p></div></ComboText>\r\n              {fillSquares(index)}\r\n            </ComboSquare>\r\n          )\r\n        })}\r\n      </RangeContainer>\r\n      {showRandomizer && <ActionRandomizer\r\n        action={action}\r\n        randomNum={randomNum}\r\n        handleComboClick={handleComboClick}\r\n      />}\r\n    </RangeBox>\r\n  );\r\n}\r\n\r\nconst RangeBox = styled.div`\r\n  background-color: #414141;\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  position: relative;\r\n;`\r\n\r\nconst RangeContainer = styled.div`\r\n  display: flex;\r\n  width: 391px;\r\n  height: 391px;\r\n  flex-wrap: wrap;\r\n  border-top: 1px solid #d4d4d4;\r\n  border-left: 1px solid #d4d4d4;\r\n  background-color: #525252;\r\n;`\r\n\r\nconst ComboSquare = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-right: 1px solid #d4d4d4;\r\n  border-bottom: 1px solid #d4d4d4;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.6rem;\r\n  user-select: none;\r\n;`\r\n\r\nconst FreqFill = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: no-wrap;\r\n  align-self: flex-end;\r\n;`\r\n\r\nconst Freq = styled.div`\r\n  width: 100%;\r\n  background-color: ${({color}) => color};\r\n  height: ${({height}) => height};\r\n;`\r\n\r\nconst ComboText = styled.div`\r\n  position: relative;\r\n  & div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 15px;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n  & p {\r\n    background-color: rgba(82, 82, 82, .5);\r\n    line-height: 0.6rem;\r\n  }\r\n;`\r\n\r\nexport default Rangechart;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\nfunction Buttons(props) {\r\n\r\n  const positionArray = ['UTG', 'HJ', 'CO', 'BTN', 'SB', 'BB']\r\n  const actionArray = ['N/A', 'CC', 'RAISE', '3BET', 'SQZ', '4BET', 'JAM']\r\n\r\n  return (\r\n    <ButtonContainer>\r\n      <ButtonGroup>\r\n        <ButtonHeading>Hero Position</ButtonHeading>\r\n        {positionArray.map(position => {\r\n          return (\r\n            <ButtonLabel key={`hero${position}`}>\r\n              <CheckButton type='radio' name='hero' value={position} checked={props.heroPosition===position} onChange={props.handleHeroChange} />\r\n              <span>{position}</span>\r\n            </ButtonLabel>\r\n          )\r\n        })}\r\n      </ButtonGroup>\r\n      <ButtonGroup>\r\n        <ButtonHeading>Villain Position</ButtonHeading>\r\n        {positionArray.map(position => {\r\n          return (\r\n            <ButtonLabel key={`villain${position}`}>\r\n              <CheckButton type='radio' name='villain' value={position} checked={props.villainPosition===position} onChange={props.handleVillainChange} />\r\n              <span>{position}</span>\r\n            </ButtonLabel>\r\n          )\r\n        })}\r\n      </ButtonGroup>\r\n      <ButtonGroup>\r\n        <ButtonHeading>Facing Action</ButtonHeading>\r\n        {actionArray.map(action => {\r\n          return (\r\n            <ButtonLabel key={`facing${action}`}>\r\n              <CheckButton type='radio' name='action' value={action} checked={props.facingAction===action} onChange={props.handleActionChange} />\r\n              <span style={{width:'51.5px'}}>{action}</span>\r\n            </ButtonLabel>\r\n          )\r\n        })}\r\n      </ButtonGroup>\r\n    </ButtonContainer>\r\n  )\r\n}\r\n\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ButtonHeading = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  text-align: left;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ButtonLabel = styled.label`\r\n  & > span {\r\n    display: inline-block;\r\n    border: 1px solid #d4d4d4;\r\n    margin: 0;\r\n    height: 30px;\r\n    width: 60px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n\r\n    @media (max-width: 420px) {\r\n      width: 45px;\r\n    }\r\n  }\r\n\r\n  &:hover > span,\r\n  &:active > span,\r\n  &:focus > span\r\n  &:checked {\r\n    background-color: #702227;\r\n    border: 1px solid #d4d4d4;\r\n  }\r\n`;\r\n\r\nconst CheckButton = styled.input`\r\n  display: none;\r\n\r\n  &:checked + span {\r\n    background-color: #702227;\r\n    border: 1px solid #d4d4d4;\r\n  }\r\n`;\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\nfunction SingleBar(props) {\r\n  if (props.range === null || props.currentCombo === null) {\r\n    return <Container />;\r\n  }\r\n\r\n  const x = props.range.betRange[props.currentCombo];\r\n  let y = []\r\n  x.raise ? y = x.raise : y = null;\r\n  return (\r\n    <Container>\r\n      <FreqFill>\r\n        {y[3] ? <Freq color=\"#d1b684\" height={`${y[3].freq/100*170}px`} /> : null}\r\n        {y[2] ? <Freq color=\"#d19184\" height={`${y[2].freq/100*170}px`} /> : null}\r\n        {y[1] ? <Freq color=\"#d184ce\" height={`${y[1].freq/100*170}px`} /> : null}\r\n        {y[0] ? <Freq color=\"#a484d1\" height={`${y[0].freq/100*170}px`} /> : null}\r\n        {x.callFreq ? <Freq color=\"#aecf84\" height={`${x.callFreq/100*150}px`} /> : null}\r\n        {x.foldFreq ? <Freq color=\"#85c2c9\" height={`${x.foldFreq/100*150}px`} /> : null}\r\n      </FreqFill>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 15%;\r\n  margin-right: 5px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FreqFill = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: no-wrap;\r\n  align-items: flex-end;\r\n;`\r\n\r\nconst Freq = styled.div`\r\n  width: 25px;\r\n  background-color: ${({color}) => color};\r\n  height: ${({height}) => height};\r\n;`\r\n\r\nexport default SingleBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport SingleBar from './SingleBar.jsx'\r\n\r\nfunction FreqSelect(props) {\r\n\r\n  return (\r\n    <SelectContainer>\r\n      <SelectButtonContainer>\r\n        <FreqButtonRow>\r\n          <FreqButton color=\"#85c2c9\" onClick={props.handleFoldClick} className={props.foldPicker && 'active'}>FOLD</FreqButton>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.freqPicker[0]}  onChange={event => props.handleFreqChange(event, 0)} /><span>%</span>\r\n          </InputContainer>\r\n          <FreqButton style={{marginLeft: \"20px\"}} color=\"#aecf84\" onClick={props.handleCallClick} className={props.callPicker && 'active'}>CALL</FreqButton>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.freqPicker[1]} onChange={event => props.handleFreqChange(event, 1)}/><span>%</span>\r\n          </InputContainer>\r\n        </FreqButtonRow>\r\n        <FreqButtonRow style={{marginTop: \"15px\"}}>\r\n            <FreqButton color=\"#a484d1\" onClick={props.handleRaiseClick} className={props.raisePicker && 'active'}>RAISE</FreqButton>\r\n            <RaiseText>Raise size, smallest to largest</RaiseText>\r\n        </FreqButtonRow>\r\n\r\n        <FreqButtonRow>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.freqPicker[2]} onChange={event => props.handleFreqChange(event, 2)}/><span>%</span>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.freqPicker[3]} onChange={event => props.handleFreqChange(event, 3)}/><span>%</span>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.freqPicker[4]} onChange={event => props.handleFreqChange(event, 4)}/><span>%</span>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.freqPicker[5]} onChange={event => props.handleFreqChange(event, 5)}/><span>%</span>\r\n          </InputContainer>\r\n        </FreqButtonRow>\r\n\r\n        <FreqButtonRow>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.sizePicker[0]} onChange={event => props.handleSizeChange(event, 0)}/><span>BB</span>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.sizePicker[1]} onChange={event => props.handleSizeChange(event, 1)}/><span>BB</span>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.sizePicker[2]} onChange={event => props.handleSizeChange(event, 2)}/><span>BB</span>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <FreqInput type=\"text\" value={props.sizePicker[3]} onChange={event => props.handleSizeChange(event, 3)}/><span>BB</span>\r\n          </InputContainer>\r\n        </FreqButtonRow>\r\n\r\n        <FreqButtonRow style={{marginTop: \"15px\"}}>\r\n          <ControlButton onClick={props.handleLoadClick}>LOAD</ControlButton>\r\n          <ControlButton onClick={props.handleResetClick}>RESET</ControlButton>\r\n          <ControlButton onClick={props.handleSubmitClick}>SUBMIT</ControlButton>\r\n        </FreqButtonRow>\r\n      </SelectButtonContainer>\r\n      <SingleBar {...props}/>\r\n    </SelectContainer>\r\n  );\r\n}\r\n\r\nconst SelectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  align-items: flex-end;\r\n;`\r\n\r\nconst SelectButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 85%;\r\n  margin-bottom: 10px;\r\n;`\r\n\r\nconst FreqButtonRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 5px 10px 0 0;\r\n;`\r\n\r\nconst InputContainer = styled.div`\r\n  width: 70px;\r\n  text-align: left;\r\n;`\r\n\r\nconst ControlButton = styled.div`\r\n  user-select: none;\r\n  font-size: 14px;\r\n  padding: 8px 0;\r\n  font-weight: 500;\r\n  width: 90px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  background-color: #414141;\r\n  margin-right: 10px;\r\n\r\n  &:hover,\r\n  &:active {\r\n    background-color: #525252;\r\n  }\r\n;`\r\n\r\nconst FreqButton = styled(ControlButton)`\r\n  border: 1px solid ${({color}) => color};\r\n  background-color: transparent;\r\n  width: 50px;\r\n  padding: 3px 0;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &.active {\r\n    background-color: ${({color}) => color};\r\n  }\r\n;`\r\n\r\nconst FreqInput = styled.input`\r\n  font-size: 18px;\r\n  width: 40px;\r\n  background-color: #414141;\r\n  color: #d4d4d4;\r\n  text-align: center;\r\n  border-radius: 3px;\r\n\r\n  &:focus {\r\n    background-color: #414141;\r\n    box-shadow: 0 0 0 2px #525252;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #d4d4d4;\r\n  }\r\n;`\r\n\r\nconst RaiseText = styled.div`\r\n  font-size: 0.6rem;\r\n;`\r\nexport default FreqSelect;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\n\r\nfunction FreqBars(props) {\r\n  const x = props.range.betRange[props.currentCombo]\r\n  const y = x.raise;\r\n\r\n  const raiseColorPicker = (index) => {\r\n    if (index === 0) {\r\n      return \"#a484d1\";\r\n    }\r\n    if (index === 1) {\r\n      return \"#d184ce\";\r\n    }\r\n    if (index === 2) {\r\n      return \"#d19184\";\r\n    }\r\n    if (index === 3) {\r\n      return \"#d1b684\";\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n    {!x.foldFreq ? null :\r\n      <ActionCol key='foldCol'>\r\n        <FreqText>{x.foldFreq}%</FreqText>\r\n        <Bar color=\"#85c2c9\" height={`${x.foldFreq*1.5}px`} />\r\n        <ActionText>FOLD</ActionText>\r\n      </ActionCol>\r\n    }\r\n    {!x.callFreq ? null :\r\n      <ActionCol key='callCol'>\r\n        <FreqText>{x.callFreq}%</FreqText>\r\n        <Bar color=\"#aecf84\" height={`${x.callFreq*1.5}px`} />\r\n        <ActionText>CALL</ActionText>\r\n      </ActionCol>\r\n    }\r\n    {!y[0] ? null :\r\n      [!y[0].freq ? null :\r\n        <ActionCol key='raiseCol'>\r\n          <RaiseBars>\r\n            {y.map((raise,index) => {\r\n              return (\r\n              <ActionCol key={`ActionCol:${index}`}>\r\n                <FreqText>{raise.freq}%</FreqText>\r\n                <Bar color={raiseColorPicker(index)} height={`${raise.freq*1.5}px`}>\r\n                  <FreqText>{raise.size}<div>BB</div></FreqText>\r\n                </Bar>\r\n              </ActionCol>\r\n              )\r\n            })}\r\n          </RaiseBars>\r\n          <ActionText>RAISE</ActionText>\r\n        </ActionCol>\r\n      ]\r\n    }\r\n  </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 60%;\r\n  justify-content: space-around;\r\n;`\r\n\r\nconst ActionCol = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n;`\r\n\r\nconst RaiseBars = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n;`\r\n\r\nconst Bar = styled.div`\r\n  background-color: ${({color}) => color};\r\n  width: 25px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #702227;\r\n  height: ${props => props.height};\r\n;`\r\n\r\nconst FreqText = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n\r\n  & > div {\r\n    font-size: 8px;\r\n  }\r\n;`\r\n\r\nconst ActionText = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  height: 30px;\r\n;`\r\n\r\nexport default FreqBars;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport FreqSelect from './FreqSelect.jsx'\r\nimport FreqBars from './FreqBars.jsx'\r\n\r\nfunction FreqDisplay(props) {\r\n\r\n  return (\r\n    <FreqContainer {...props}>\r\n      {!props.displayActive ? <FreqSelect {...props}/> : <FreqBars {...props}/>}\r\n    </FreqContainer>\r\n  );\r\n}\r\n\r\nconst FreqContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: ${props => props.displayActive ? \"center\" : \"space-around\"};\r\n  width: 100%;\r\n;`\r\n\r\n export default FreqDisplay;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro'\r\n\r\nimport Buttons from './Buttons.jsx'\r\nimport FreqSelect from './FreqSelect.jsx'\r\nimport FreqDisplay from './FreqDisplay.jsx'\r\n\r\nfunction Dash(props) {\r\n  return (\r\n    <DashBox>\r\n      <div>\r\n        <Buttons {...props}/>\r\n      </div>\r\n        <FreqDisplay {...props} />\r\n    </DashBox>\r\n  )\r\n}\r\n\r\nconst DashBox = styled.div`\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n;`\r\n\r\nexport default Dash;\r\n","import Swal from 'sweetalert2/src/sweetalert2.js'\r\n\r\nconst AlertModal = Swal.mixin({\r\n  width: 400,\r\n  padding: 25,\r\n  confirmButtonText: 'Confirm'\r\n})\r\n\r\nexport default AlertModal;\r\n","const cards = ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2']\r\n\r\n// map each letter to a card value\r\nconst cardValue = (c) => {\r\n  let copy = Array.from(cards);\r\n  copy.reverse();\r\n  return copy.indexOf(c) + 2;\r\n}\r\n\r\n// make combos my mapping each card to each other card\r\nconst lines = cards.map((x,y,z) => {\r\n  const lineArray = z.map(a => a + x);\r\n  return lineArray;\r\n});\r\n\r\nconst unsuited = lines.flat();\r\n\r\n// correct ordering, add offsuit\r\nconst orderCombos = unsuited.map(x => {\r\n  const matrix = x.split('').reduce((a,b) => {\r\n    if (cardValue(a) > cardValue(b)) {\r\n      return (a + b) + 'o';\r\n    } else if (cardValue(b) > cardValue(a)) {\r\n      return b + a;\r\n    } else if (cardValue(a) === cardValue(b)) {\r\n      return a + b;\r\n    }\r\n  }, '');\r\n\r\n  return matrix;\r\n});\r\n\r\n// add suited combos\r\nconst combos = orderCombos.map(y => {\r\n  if (y.length < 3 && y.charAt(0) !== y.charAt(1)) {\r\n    return y + 's';\r\n  }\r\n  return y;\r\n});\r\n\r\nconst arrayNums = [...Array(169).keys()]\r\n\r\nconst defaultArray = arrayNums.map((x, i) => {\r\n  var o = Object.assign({}, x)\r\n  o.hand = combos[i];\r\n  o.foldFreq = 0;\r\n  o.callFreq = 0;\r\n  o.raise = [];\r\n  return o;\r\n})\r\n\r\nconst defaultRange = {\r\n  heroPos: '',\r\n  vilPos: '',\r\n  facing: '',\r\n  stackDepth: 100,\r\n  betRange: defaultArray,\r\n}\r\n\r\nexport default defaultRange;\r\n","import React, { useState, useEffect, useCallback} from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport axios from 'axios';\nimport styled from 'styled-components/macro';\nimport {useStateWithCallbackLazy} from 'use-state-with-callback';\nimport withReactContent from 'sweetalert2-react-content';\n\nimport Rangechart from './components/Rangechart.jsx';\nimport Dash from './components/Dash.jsx';\n\nimport AlertModal from './lib/AlertModal.js';\nimport './lib/AlertModal.scss'\nimport defaultRange from './lib/combos.jsx';\n\nconst MySwal = withReactContent(AlertModal);\n\nfunction App() {\n  //toggle two main app modes 'create range' and 'display range'\n  const [displayActive, setDisplay] = useState(true);\n\n  const handleDisplayClick = event => {\n    const value = (event.target.value === \"true\")\n    setDisplay(value);\n  }\n\n  // track current combo being hovered on rangechart\n  const [currentCombo, setCombo] = useStateWithCallbackLazy(0);\n\n  //manage state of radio butotns to select range scenario\n  const [heroPosition, setHeroPosition] = useState('BB');\n  const [villainPosition, setVillainPosition] = useState('BTN');\n  const [facingAction, setFacingAction] = useState('N/A');\n  const [selectedRange, setSelectedRange] = useState(['BB', 'BTN', 'N/A']);\n\n  // fetch new range based on value of radio selector buttons\n  const updateRange = (a, b, c) => {\n    setSelectedRange([a,b,c]);\n  }\n\n  // change handlers for radio selectors, trigger updateRange()\n  // conditionally on display state\n  const handleHeroChange = event => {\n    const value = event.target.value;\n    setHeroPosition(value);\n    displayActive && updateRange(value, villainPosition, facingAction);\n  }\n\n  const handleVillainChange = event => {\n    const value = event.target.value;\n    setVillainPosition(value);\n    displayActive && updateRange(heroPosition, value, facingAction);\n  }\n\n  const handleActionChange = event => {\n    const value = event.target.value;\n    setFacingAction(value);\n    displayActive && updateRange(heroPosition, villainPosition, value);\n  }\n\n  // manage state of range pulled from database / edited by user\n  const [range, setRange] = useState(defaultRange);\n\n  const getRange = useCallback(async () => {\n    const source = axios.CancelToken.source();\n    try {\n      const response = await axios.get('http://localhost:9000/ranges', {params: {\n        heroPos : selectedRange[0],\n        vilPos : selectedRange[1],\n        facing: selectedRange[2],\n        stackDepth: 100\n      }}, {cancelToken: source.token});\n      const rangeResponse = await response.data;\n      if (rangeResponse === null) {\n        return setRange(defaultRange)\n      }\n      setRange(rangeResponse);\n    } catch (error) {\n      console.log(error);\n    }\n    return () => source.cancel('axios request cancelled');\n  }, [selectedRange]);\n\n  // load range from db to edit in create range mode\n  const handleLoadClick = event => {\n    updateRange(heroPosition, villainPosition, facingAction);\n  }\n\n  // reset range to empty in create range mode\n  const handleResetClick = event => {\n    let resetRange = defaultRange;\n    resetRange.heroPos = heroPosition;\n    resetRange.vilPos = villainPosition;\n    resetRange.facing = facingAction;\n    pushSelectedToRange(resetRange);\n  }\n\n  const handleSubmitClick = () => {\n    MySwal.fire({\n      title: 'Enter password to post range',\n      input: 'password',\n      confirmButtonText: 'Submit',\n      showCancelButton: true,\n      reverseButtons: true,\n      preConfirm: (value) => {\n        if (value !== process.env.REACT_APP_POST_PASS) {\n          MySwal.showValidationMessage('Incorrect Password')\n        } else {\n          checkForRange();\n        }\n      }\n    });\n  };\n\n  const checkForRange = async () => {\n    const source = axios.CancelToken.source();\n    try {\n      const response = await axios.get('http://localhost:9000/ranges', {params: {\n        heroPos : heroPosition,\n        vilPos : villainPosition,\n        facing: facingAction,\n        stackDepth: 100,\n      }}, {cancelToken: source.token});\n      if (response.data !== null) {\n        return MySwal.fire({\n          title: 'Range for this scenario already exists, press confirm to overwrite',\n          showCancelButton: true,\n          reverseButtons: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            postRange();\n          } else if (result.isDismissed) {\n            MySwal.fire({\n              title: 'Range not Posted',\n              icon: 'error',\n              confirmButtonText: 'OK'\n            });\n          }\n        });\n      } else {\n        postRange();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return () => source.cancel('axios request cancelled');\n  };\n\n  const postRange = async () => {\n    const source = axios.CancelToken.source();\n    try {\n      const response = await axios.post('http://localhost:9000/ranges', {\n        heroPos: heroPosition,\n        vilPos: villainPosition,\n        facing: facingAction,\n        stackDepth: 100,\n        betRange: range.betRange,\n      }, {cancelToken: source.token});\n      const didPost = await response.status;\n      console.log(didPost);\n      didPost === 200 && MySwal.fire({\n        title: 'Nice!',\n        text: 'Range has been posted to Database',\n        icon: 'success',\n        confirmButtonText: 'OK',\n      });\n    }\n    catch (error){\n      MySwal.fire({\n        title: 'Error Posting to Database',\n        text: 'Please try again later',\n        icon: 'error',\n        confirmButtonText: 'OK',\n      });\n      console.log(error);\n    }\n    return () => source.cancel('axios request cancelled');\n  }\n\n  const pushSelectedToRange = useCallback(async (newRange) => {\n    await setRange(newRange);\n  }, []);\n\n  useEffect(() => {\n    getRange()\n  }, [getRange, pushSelectedToRange]);\n\n\n  // manage state state of frequency buttons when creating new range\n  const [foldPicker, setFoldPicker] = useState(false);\n  const [callPicker, setCallPicker] = useState(false);\n  const [raisePicker, setRaisePicker] = useState(false);\n  const [freqPicker, setFreqPicker] = useState([100,0,0,0,0,0]);\n  const [sizePicker, setSizePicker] = useState([3,0,0,0]);\n  const [renderTrigger, setRenderTrigger] = useState(false);\n  const [isMouseDown, setMouseDown] = useState(false);\n\n\n  const handleFoldClick = event => {\n    setFoldPicker(prevCheck => !prevCheck);\n  }\n\n  const handleCallClick = event => {\n    setCallPicker(prevCheck => !prevCheck);\n  }\n\n  const handleRaiseClick = event => {\n    setRaisePicker(prevCheck => !prevCheck);\n  }\n\n  const handleFreqChange = (event, index) => {\n    const newFreq = event.target.value;\n    let newArr = [...freqPicker];\n    newArr[index] = newFreq;\n    setFreqPicker(newArr);\n  }\n\n  const handleSizeChange = (event, index) => {\n    const newSize = event.target.value;\n    let newArr = [...sizePicker];\n    newArr[index] = newSize;\n    setSizePicker(newArr);\n  }\n\n  const handleFreqInput = combo => {\n    if (!foldPicker & !callPicker & !raisePicker) {\n      return MySwal.fire(<div>No Action Selected</div>)\n        .then(setMouseDown(false));\n    }\n    const freqPickerToNum = freqPicker.map(x => {\n      return parseInt(x || 0);\n    });\n    const sizePickerToNum = sizePicker.map(x => {\n      return parseFloat(x || 0);\n    })\n    if (freqPickerToNum.reduce((a,b) => a+b) === 0) {\n      return MySwal.fire(<div>No Frequency Selected</div>)\n        .then(setMouseDown(false));\n    }\n    if (freqPickerToNum.reduce((a,b) => a+b) > 100) {\n      return MySwal.fire(<div>Total Frequency Greater Than 100</div>)\n        .then(setMouseDown(false));\n    }\n    const raiseArray = freqPickerToNum.slice(2);\n    const thisCombo = cloneDeep(range.betRange[combo]);\n    foldPicker ?\n      thisCombo.foldFreq = freqPickerToNum[0] || 0 :\n      thisCombo.foldFreq = 0;\n    callPicker ? thisCombo.callFreq = freqPickerToNum[1] || 0 :\n      thisCombo.callFreq = 0;\n    if (raisePicker) {\n      thisCombo.raise = [{freq: 0, size: 0}];\n      raiseArray.forEach(async (element, index) => {\n        if (raiseArray[index] !== 0) {\n          return thisCombo.raise[index] = {freq: raiseArray[index], size: sizePickerToNum[index]};\n        }\n      })\n    } else {\n      thisCombo.raise = [{freq: 0, size: 0}]\n    }\n\n\n    const compareObjects = (a, b) => {\n      if (a === b) return true;\n\n      if (typeof a != 'object' || typeof b != 'object' || a == null || b == null) return false;\n\n      let keysA = Object.keys(a), keysB = Object.keys(b);\n\n      if (keysA.length != keysB.length) return false;\n\n      for (let key of keysA) {\n        if (!keysB.includes(key)) return false;\n\n        if (typeof a[key] === 'function' || typeof b[key] === 'function') {\n          if (a[key].toString() != b[key].toString()) return false;\n        } else {\n          if (!compareObjects(a[key], b[key])) return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (compareObjects(thisCombo, range.betRange[combo])) {\n      thisCombo.foldFreq = 0;\n      thisCombo.callFreq = 0;\n      thisCombo.raise = {freq: 0, size:0}\n    }\n\n    const newRange = cloneDeep(range);\n    newRange.betRange[combo] = thisCombo;\n    setRenderTrigger(prevState => !prevState);\n    pushSelectedToRange(newRange);\n  }\n\n  const handleMouseUp = () => {\n    setMouseDown(false);\n  }\n\n  return (\n    <MainContainer onMouseUp={handleMouseUp}>\n      <AppRow>\n        <ButtonLabel>\n          <DispButton type='radio' name='radio' value='true' checked={displayActive===true} onChange={handleDisplayClick} />\n          <span>Display Range</span>\n        </ButtonLabel>\n        <ButtonLabel>\n          <DispButton type='radio'  name='radio' value='false' checked={displayActive===false} onChange={handleDisplayClick} />\n          <span>Create Range</span>\n        </ButtonLabel>\n      </AppRow>\n      <AppRow>\n        <Rangechart\n          range={range}\n          currentCombo={currentCombo}\n          setCombo={setCombo}\n          displayActive={displayActive}\n          handleFreqInput={handleFreqInput}\n          isMouseDown={isMouseDown}\n          setMouseDown={setMouseDown}\n        />\n        <Dash\n          range={range}\n          currentCombo={currentCombo}\n          displayActive={displayActive}\n\n          heroPosition={heroPosition}\n          villainPosition={villainPosition}\n          facingAction={facingAction}\n\n          handleHeroChange={handleHeroChange}\n          handleVillainChange={handleVillainChange}\n          handleActionChange={handleActionChange}\n\n          handleLoadClick={handleLoadClick}\n\n          foldPicker={foldPicker}\n          callPicker={callPicker}\n          raisePicker={raisePicker}\n          freqPicker={freqPicker}\n          sizePicker={sizePicker}\n          handleFoldClick={handleFoldClick}\n          handleCallClick={handleCallClick}\n          handleRaiseClick={handleRaiseClick}\n          handleFreqChange={handleFreqChange}\n          handleSizeChange={handleSizeChange}\n          handleSubmitClick={handleSubmitClick}\n          handleResetClick={handleResetClick}\n        />\n      </AppRow>\n    </MainContainer>\n\n  );\n}\n\nconst MainContainer = styled.div`\n  /* stylelint-disable */\n  text-align: center;\n  padding: 10px;\n  color: #d4d4d4;\n`;\n\nconst AppRow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst ButtonLabel = styled.label`\n  & > span {\n    display: inline-block;\n    border: 1px solid #d4d4d4;\n    margin: 0;\n    height: 30px;\n    width: 150px;\n    line-height: 30px;\n    text-align: center;\n\n    @media (max-width: 420px) {\n      width: 45px;\n    }\n  }\n\n  &:hover > span,\n  &:active > span,\n  &:focus > span\n  &:checked {\n    background-color: #702227;\n    border: 1px solid #d4d4d4;\n  }\n`;\n\nconst DispButton = styled.input`\n  display: none;\n\n  &:checked + span {\n    background-color: #702227;\n    border: 1px solid #d4d4d4;\n  }\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}